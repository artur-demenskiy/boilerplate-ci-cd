name: CI/CD Pipeline

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main, development ]

env:
  NODE_VERSION: '20'
  PNPM_VERSION: '10.12.3'
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # Основные проверки для всех событий
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Настройка pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}
      
      - name: Настройка Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
      
      - name: Установка зависимостей
        run: pnpm install --frozen-lockfile
      
      - name: Запуск линтера
        run: pnpm lint
      
      - name: Проверка форматирования
        run: pnpm format:check
      
      - name: Запуск unit тестов
        run: pnpm test
      
      - name: Запуск e2e тестов
        run: pnpm test:e2e
      
      - name: Сборка приложения
        run: pnpm build

  # Docker сборка для всех событий
  docker-build:
    runs-on: ubuntu-latest
    needs: lint-and-test
    steps:
      - uses: actions/checkout@v4
      
      - name: Настройка Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Сборка Docker образа
        run: |
          docker build -t app:test .
          docker images
      
      - name: Тестирование Docker образа
        run: |
          docker run --rm -d --name test-app -p 3000:3000 app:test
          sleep 10
          curl -f http://localhost:3000/ || exit 1
          docker stop test-app

  # Проверка безопасности для всех событий
  security-scan:
    runs-on: ubuntu-latest
    needs: lint-and-test
    steps:
      - uses: actions/checkout@v4
      
      - name: Настройка pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}
      
      - name: Настройка Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
      
      - name: Установка зависимостей
        run: pnpm install --frozen-lockfile
      
      - name: Запуск аудита безопасности
        run: pnpm audit
      
      - name: Проверка устаревших пакетов
        run: pnpm outdated || true

  # Деплой в development окружение (только при push в development)
  deploy-development:
    runs-on: ubuntu-latest
    needs: [lint-and-test, docker-build, security-scan]
    if: github.ref == 'refs/heads/development'
    environment: development
    steps:
      - uses: actions/checkout@v4
      
      - name: Настройка Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Сборка и отправка Docker образа для development
        run: |
          docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:development .
          echo "Docker образ успешно собран для development"
      
      - name: Деплой в development
        run: |
          echo "Деплой в development окружение..."
          echo "Docker образ: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:development"
          # Добавьте ваши команды деплоя для development

  # Деплой в production (только при push в main)
  deploy-production:
    runs-on: ubuntu-latest
    needs: [lint-and-test, docker-build, security-scan]
    if: github.ref == 'refs/heads/main'
    environment: production
    steps:
      - uses: actions/checkout@v4
      
      - name: Настройка Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Сборка и отправка Docker образа для production
        run: |
          docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest .
          docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} .
          echo "Docker образ успешно собран для production"
      
      - name: Деплой в production
        run: |
          echo "Деплой в production окружение..."
          echo "Docker образ: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"
          # Добавьте ваши команды деплоя для production 