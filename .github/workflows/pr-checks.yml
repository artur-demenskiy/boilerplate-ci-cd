name: PR Checks

on:
  pull_request:
    branches: [ main, staging ]
  pull_request_target:
    branches: [ main, staging ]

jobs:
  pr-analysis:
    name: PR Analysis
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 10.12.3
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'pnpm'
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Run ESLint
      run: pnpm run lint
      
    - name: Check Prettier formatting
      run: pnpm run format:check
      
    - name: Run unit tests
      run: pnpm run test
      
    - name: Run e2e tests
      run: pnpm run test:e2e
      
    - name: Build application
      run: pnpm run build
      
    - name: Security audit
      run: pnpm audit --audit-level=moderate
      
    - name: Check bundle size
      run: |
        echo "üì¶ Checking bundle size..."
        pnpm run build
        du -sh dist/
        
    - name: Check for console.log statements
      run: |
        echo "üîç Checking for console.log statements..."
        if grep -r "console.log" src/ --exclude-dir=node_modules; then
          echo "‚ö†Ô∏è  Found console.log statements in source code"
          echo "Please remove console.log statements before merging"
          exit 1
        else
          echo "‚úÖ No console.log statements found"
        fi
        
    - name: Check for TODO comments
      run: |
        echo "üìù Checking for TODO comments..."
        if grep -r "TODO" src/ --exclude-dir=node_modules; then
          echo "‚ö†Ô∏è  Found TODO comments in source code"
          echo "Please address TODO comments before merging"
        else
          echo "‚úÖ No TODO comments found"
        fi

  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 10.12.3
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'pnpm'
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Run SonarQube analysis
      run: |
        echo "üîç Running code quality analysis..."
        # Add SonarQube analysis here if needed
        echo "Code quality analysis completed"
        
    - name: Check TypeScript compilation
      run: |
        echo "üîß Checking TypeScript compilation..."
        pnpm exec tsc --noEmit
        echo "‚úÖ TypeScript compilation successful"
        
    - name: Check for unused dependencies
      run: |
        echo "üì¶ Checking for unused dependencies..."
        pnpm exec depcheck || echo "‚ö†Ô∏è  Some dependencies might be unused"
        
    - name: Check for circular dependencies
      run: |
        echo "üîÑ Checking for circular dependencies..."
        pnpm exec madge --circular src/ || echo "‚úÖ No circular dependencies found" 